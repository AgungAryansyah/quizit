basePath: /api/v1
definitions:
  dto.HttpError:
    properties:
      error:
        example: Article not found
        type: string
      messgae:
        example: Invalid token
        type: string
    type: object
  dto.HttpSuccess:
    properties:
      message:
        example: Succes
        type: string
      payload: {}
    type: object
  dto.Register:
    properties:
      email:
        example: user@example.com
        type: string
      name:
        example: new user
        minLength: 6
        type: string
      password:
        example: Strong_Password123
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:8081
info:
  contact: {}
  title: Quizit
  version: "1.0"
paths:
  /auths/register:
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload
      parameters:
      - description: Register req body
        in: body
        name: registerReq
        required: true
        schema:
          $ref: '#/definitions/dto.Register'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HttpSuccess'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/dto.HttpError'
        "409":
          description: User already exist
          schema:
            $ref: '#/definitions/dto.HttpError'
        "500":
          description: Internal Server error
          schema:
            $ref: '#/definitions/dto.HttpError'
      summary: Create a new account
      tags:
      - Auth
swagger: "2.0"
