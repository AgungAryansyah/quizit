// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/articles": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article"
                ],
                "summary": "Get an article by search param",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Keyword",
                        "name": "keyword",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article"
                ],
                "summary": "Create an article",
                "parameters": [
                    {
                        "description": "Crete article",
                        "name": "createArticle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateArticleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unaouthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            },
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article"
                ],
                "summary": "Edit an article",
                "parameters": [
                    {
                        "description": "Edit article request body",
                        "name": "editArtilce",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EditArticleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unaouthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article"
                ],
                "summary": "Get an article written by the user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unaouthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/articles/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article"
                ],
                "summary": "Get an article by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Article"
                ],
                "summary": "Delete an article by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unaouthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/attempts": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attempt"
                ],
                "summary": "User attempts a quiz",
                "parameters": [
                    {
                        "description": "User anser request body",
                        "name": "answers",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAnswersDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/attempts/quizes/{quizId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attempt"
                ],
                "summary": "Get attempts from a quiz",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quiz ID",
                        "name": "quizId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/attempts/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attempt"
                ],
                "summary": "Get user's attempt",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/auths/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logs into an account",
                "parameters": [
                    {
                        "description": "Login request body",
                        "name": "loginReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/auths/logout": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logs user out by deleting the session and cookie",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/auths/refresh": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh user session",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/auths/register": {
            "post": {
                "description": "Create a new user with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "Register request body",
                        "name": "registerReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "409": {
                        "description": "User already exist",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/quizzes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quiz"
                ],
                "summary": "Search a quiz",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Keyword",
                        "name": "keyword",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quiz"
                ],
                "summary": "Create a quiz",
                "parameters": [
                    {
                        "description": "Create quiz body request",
                        "name": "createQuiz",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateQuiz"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/quizzes/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quiz"
                ],
                "summary": "Get quiz made by the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/quizzes/{code}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quiz"
                ],
                "summary": "Get quiz by the quiz code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quiz code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/quizzes/{quizId}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quiz"
                ],
                "summary": "Delete a quiz",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quiz ID",
                        "name": "quizId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/quizzes/{quizId}/questions/options": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quiz"
                ],
                "summary": "Get quiz with the questions and option",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quiz ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get my account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpSuccess"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateArticleReq": {
            "type": "object",
            "required": [
                "text",
                "title"
            ],
            "properties": {
                "text": {
                    "type": "string",
                    "example": "Article content"
                },
                "title": {
                    "type": "string",
                    "example": "Article title"
                }
            }
        },
        "dto.CreateOption": {
            "type": "object",
            "required": [
                "text"
            ],
            "properties": {
                "is_correct": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "dto.CreateQuestion": {
            "type": "object",
            "required": [
                "options",
                "score",
                "text"
            ],
            "properties": {
                "options": {
                    "type": "array",
                    "maxItems": 5,
                    "minItems": 2,
                    "items": {
                        "$ref": "#/definitions/dto.CreateOption"
                    }
                },
                "score": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "dto.CreateQuiz": {
            "type": "object",
            "required": [
                "questions",
                "theme",
                "title"
            ],
            "properties": {
                "questions": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 2,
                    "items": {
                        "$ref": "#/definitions/dto.CreateQuestion"
                    }
                },
                "theme": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.EditArticleReq": {
            "type": "object",
            "required": [
                "id",
                "text",
                "title"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "11111111-1111-1111-1111-111111111111"
                },
                "text": {
                    "type": "string",
                    "example": "Edited article content"
                },
                "title": {
                    "type": "string",
                    "example": "Edited article title"
                }
            }
        },
        "dto.HttpError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error message"
                },
                "messgae": {
                    "type": "string",
                    "example": "Error type"
                }
            }
        },
        "dto.HttpSuccess": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Succes"
                },
                "payload": {}
            }
        },
        "dto.LoginReq": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "Strong_Password123"
                }
            }
        },
        "dto.RegisterReq": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "name": {
                    "type": "string",
                    "minLength": 6,
                    "example": "new user"
                },
                "password": {
                    "type": "string",
                    "example": "Strong_Password123"
                }
            }
        },
        "dto.UserAnswersDto": {
            "type": "object",
            "required": [
                "answers",
                "quiz_id"
            ],
            "properties": {
                "answers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "quiz_id": {
                    "type": "string",
                    "example": "11111111-1111-1111-1111-111111111111"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Quizit",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
